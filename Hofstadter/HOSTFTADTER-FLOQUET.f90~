!gfortran HOSTFTADTER.f90 -llapack -lblas
MODULE physical_constants
  IMPLICIT NONE
  DOUBLE PRECISION, PARAMETER :: e       = 1.602176462E-19
  DOUBLE PRECISION, PARAMETER :: hbar    = 1.054E-34
  DOUBLE PRECISION, PARAMETER :: mu_B    = 9.2740154E-24
  DOUBLE PRECISION, PARAMETER :: k_B     = 1.38E-23
  DOUBLE PRECISION, PARAMETER :: pi      = 3.1415926
  DOUBLE PRECISION, PARAMETER :: mu_cero = 12.566370614E-7
  DOUBLE PRECISION, PARAMETER :: epsilon_cero = 8.854187817E-12 
  DOUBLE PRECISION, PARAMETER :: amu     = 1.660538921E-27
  DOUBLE PRECISION, PARAMETER :: g_t     = 9.8
  DOUBLE PRECISION, PARAMETER :: SB_ct   = 5.6704E-8
END MODULE physical_constants

MODULE LATTICE
  IMPLICIT NONE
  INTEGER, PARAMETER :: N_SITES   = 900
  INTEGER, PARAMETER :: N_SITES_X = 66
  INTEGER, PARAMETER :: N_SITES_Y = 132
  INTEGER, PARAMETER :: N_PARTICLES = 1
  INTEGER, PARAMETER :: HASH_SLOPE = 517
  INTEGER, PARAMETER :: HASH_SHIFT = 3!51459
  INTEGER, PARAMETER :: PERIODIC = 1
  DOUBLE PRECISION, PARAMETER :: alpha = -1.0/3.0
END MODULE LATTICE

MODULE INTERACTION
  IMPLICIT NONE
  DOUBLE PRECISION, PARAMETER :: J_c =  1.0
  DOUBLE PRECISION, PARAMETER :: J_X =  1.0 ! next-neighbour coupling
  DOUBLE PRECISION, PARAMETER :: J_Y =  2.25 !A. 0.75!B. 1.5 !C. 1.8,!D. 2.25
END MODULE INTERACTION

MODULE FLOQUET
  INTEGER, PARAMETER :: NF=5
END MODULE FLOQUET

MODULE TIME_DEPENDENT
  USE physical_constants
 
  ! PRL112,026805
  !A  
  !DOUBLE PRECISION, PARAMETER :: T   =  5.0*pi/6.0
  !B  
  !DOUBLE PRECISION, PARAMETER :: T   =  4.0*pi/3.0
  !C  
  !DOUBLE PRECISION, PARAMETER :: T   = 23.0*pi/15.0
  !D  
  DOUBLE PRECISION, PARAMETER :: T   = pi
  DOUBLE PRECISION, PARAMETER :: tau = pi/3

  !PRB90 205105
  !DOUBLE PRECISION, PARAMETER :: T   =  (2.0*PI)/3.3
  !DOUBLE PRECISION, PARAMETER :: gamma = 4.0
  
END MODULE TIME_DEPENDENT

MODULE INTERFACE
  IMPLICIT NONE
  INTERFACE
     
     SUBROUTINE LAPACK_FULLEIGENVALUES(H,N,W_SPACE,INFO)
       INTEGER,                    INTENT(IN) :: N
       COMPLEX*16, DIMENSION(:,:), INTENT(INOUT) :: H  
       DOUBLE PRECISION, DIMENSION(:), INTENT(IN) :: W_SPACE
       INTEGER,                    INTENT(OUT):: INFO
     END SUBROUTINE LAPACK_FULLEIGENVALUES
  END INTERFACE
END MODULE INTERFACE


PROGRAM BUTTERFLY
  
  USE PHYSICAL_CONSTANTS
  USE INTERFACE
  USE FLOQUET
  USE TIME_DEPENDENT
  USE INTERACTION
  USE LATTICE

  IMPLICIT NONE
  
  INTEGER K,Q,K_,INFO,I,J
  COMPLEX*16,       DIMENSION(:,:), ALLOCATABLE :: HX,HY
  COMPLEX*16,       DIMENSION(:,:), ALLOCATABLE :: HF,IDENTITY
  COMPLEX*16,       DIMENSION(:)  , ALLOCATABLE :: A,B
  DOUBLE PRECISION, DIMENSION(:),   ALLOCATABLE :: EIGENVALUES

  COMPLEX*16 R
  ALLOCATE(HX(N_SITES_X,N_SITES_X))
  ALLOCATE(HY(N_SITES_X,N_SITES_X))
  ALLOCATE(IDENTITY(N_SITES_X,N_SITES_X))
  ALLOCATE(HF(N_SITES_X*(2*NF+1),N_SITES_X*(2*NF+1)))
  ALLOCATE(A(2*NF+1))
  ALLOCATE(B(2*NF+1))
  ALLOCATE(EIGENVALUES((2*NF+1)*N_SITES_X))

  A = 0.0
  B = 0.0
  !PRL112,026805
  DO I=1,2*NF+1
     !IF(ABS(I).GT.6 .AND. ABS(I).LT.8 .AND. NF.GT.0) THEN
     IF(ABS(I).GT.1) THEN
        A(I) = (DCMPLX(0.0,-1.0)/(2*PI*(I-1)))*(EXP(DCMPLX(0.0,1.0)*2*PI*(I-1)*TAU/T) - 1.0)*&
             & EXP(DCMPLX(0.0,1.0)*(I-1)*(2*PI/T)*(T-TAU))
        B(I) = (DCMPLX(0.0,-1.0)/(2*PI*(I-1)))*(EXP(DCMPLX(0.0,1.0)*2*PI*(I-1)*(T-TAU)/T) - 1.0)
     ELSE
        A(I) = TAU/T
        B(I) = (T-TAU)/T
     END IF
  END DO
  
!!$  !PRB90,205108
!!$  A(1) = -1.0
!!$  B(1) = -4.5
!!$  A(2) = 0.0
!!$  B(2) = gamma/2.0

  !test rectangular function 
!!$  DO I=1,2*NF+1
!!$     J    = -NF + (I-1)
!!$     IF(ABS(J).GT.0) THEN
!!$        A(I) = (DCMPLX(0.0,-1.0)/(2*PI*J))*(EXP(DCMPLX(0.0,1.0)*2*PI*J*TAU/T) - 1.0)*EXP(DCMPLX(0.0,1.0)*J*(2*PI/T)*(T-TAU))
!!$        B(I) = (DCMPLX(0.0,-1.0)/(2*PI*J))*(EXP(DCMPLX(0.0,1.0)*2*PI*J*(T-TAU)/T) - 1.0)
!!$     ELSE
!!$        A(I) = TAU/T
!!$        B(I) = (T-TAU)/T
!!$     END IF
!!$  END DO
!!$  DO i=1,200
!!$     R = B(1)
!!$     DO K=2,2*NF+1
!!$        !J = -NF + (K-1)        
!!$        !IF(ABS(J).GT.0) THEN
!!$           !R = R + A(K)*EXP(DCMPLX(0.0,1.0)*J*(2*PI/T)*(i*T/100))
!!$           R = R + B(K)*EXP(DCMPLX(0.0,1.0)*K*(2*PI/T)*(i*T/100)) + conjg(B(K))*EXP(DCMPLX(0.0,-1.0)*K*(2*PI/T)*(i*T/100))
!!$        !END IF
!!$     END DO
!!$     WRITE(*,*) (i*T/100)/T,REAL(R),AIMAG(R)
!!$  END DO

  HX = DCMPLX(0.0,0.0)
  
  IF(PERIODIC.EQ.1) THEN
     DO K=1,N_SITES_X
        K_ = MOD(K + 1,N_SITES_X)
        IF(K_.EQ.0) K_ = N_SITES_X
        HX(K,K_) = 1.0
     END DO
  ELSE
     DO K=1,N_SITES_X-1
        K_ = K+1
        HX(K,K_) = 1.0
     END DO
  END IF

  DO K=1,N_SITES_X
     IDENTITY(K,K) = DCMPLX(1.0,0.0)
  END DO

  HX = HX + TRANSPOSE(CONJG(HX))
  
  DO Q=1,N_SITES_Y
     
     HY = DCMPLX(0.0,0.0)
     HF = DCMPLX(0.0,0.0)
     
     DO K=1,N_SITES_X
        HY(K,K) = 2.0*COS(2*PI*Q/N_SITES_Y - 2*PI*ALPHA*K)
     END DO
     
     DO I=1,2*NF+1
        DO J=I+1,2*NF+1
           IF( ABS(1 + J - I) .LE. (2*NF+1)) THEN
              HF((I-1)*N_SITES_X + 1 : (I-1)*N_SITES_X + N_SITES_X, &
                   & (J-1)*N_SITES_X + 1 : (J-1)*N_SITES_X + N_SITES_X) = -A(J-I+1)*J_X*HX - B(J-I+1)*J_Y*HY
              !WRITE(*,*) 1 + J - I,A(NF + 1 + J-I),B(NF + 1 + J - I),NF+1,J,I
           END IF
        END DO
     END DO

     HF = HF + TRANSPOSE(CONJG(HF))
     
     DO I=1,2*NF+1
        J = -NF + (I-1)
        HF((I-1)*N_SITES_X + 1: (I-1)*N_SITES_X + N_SITES_X, &
             & (I-1)*N_SITES_X + 1: (I-1)*N_SITES_X + N_SITES_X) &
             & = -1.0*J_X*A(1)*HX - 1.0*J_Y*B(1)*HY + 1.0*J*(2*PI/T)*IDENTITY
     END DO
     
!     DO I=1,(2*NF+1)*N_SITES_X
!        write(*,209) real(HF(I,:))
!     END DO
!     WRITE(*,*)
     CALL LAPACK_FULLEIGENVALUES(HF,N_SITES_X*(2*NF+1),EIGENVALUES,INFO)
     WRITE(*,*) EIGENVALUES(:)
     
  END DO
  
 
  
DEALLOCATE(HX)
DEALLOCATE(HY)
DEALLOCATE(HF)
DEALLOCATE(EIGENVALUES)


207 FORMAT(7e15.6) 
209 FORMAT(21E15.6) 
END PROGRAM BUTTERFLY

SUBROUTINE LAPACK_FULLEIGENVALUES(H,N,W_SPACE,INFO)

  IMPLICIT NONE
  INTEGER,                        INTENT(IN) :: N
  COMPLEX*16, DIMENSION(:,:),     INTENT(INOUT) :: H
!  COMPLEX*16, DIMENSION(:,:),     INTENT(OUT) :: Z
  DOUBLE PRECISION, DIMENSION(:), INTENT(OUT) :: W_SPACE
  INTEGER,                        INTENT(OUT):: INFO
    

  !---SETTING  LAPACK VARIABLES: START ---------!
  CHARACTER         JOBZ, UPLO
  INTEGER           LWORK,LDA
  INTEGER,          DIMENSION(:),   ALLOCATABLE :: IWORK,ISUPPZ
  DOUBLE PRECISION, DIMENSION(:),   ALLOCATABLE :: RWORK
  COMPLEX*16,       DIMENSION(:),   ALLOCATABLE :: WORK
  COMPLEX*16,       DIMENSION(:,:), ALLOCATABLE :: Z,H_AUX  
  JOBZ = 'V'
  UPLO = 'L'  
 
  ALLOCATE(H_AUX(N,N))
  H_AUX = 0.0
  LDA   =  N
  LWORK = 2*N
!  ALLOCATE(W_SPACE(N))
  ALLOCATE(WORK(2*N))
  ALLOCATE(RWORK(3*N-2))
  !---- use zheev to get the optimun value of LWORK
  WORK = -1
  CALL ZHEEV(JOBZ,UPLO,N,H_AUX,LDA,W_SPACE,WORK,LWORK,RWORK,INFO)
  LWORK = INT(WORK(1))
  DEALLOCATE(WORK)
  ALLOCATE(WORK(LWORK))
  IF(INFO /= 0) WRITE(*,*) "DIAG FAIL"
  
  CALL ZHEEV(JOBZ,UPLO,N,H,LDA,W_SPACE, WORK, LWORK, RWORK,INFO)       
        
 ! DEALLOCATE(W_SPACE)
  DEALLOCATE(WORK)
  DEALLOCATE(RWORK) 
  DEALLOCATE(H_AUX)
END SUBROUTINE LAPACK_FULLEIGENVALUES
      
