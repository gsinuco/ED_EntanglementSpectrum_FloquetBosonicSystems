! for now, Just two particle spectrum
! U_AUX:    Eigenvectors of the single particle Hamiltonian
! EIGENVALUES_H: spectrum of the single particle hamiltonian
! U_MB : eigenvectors of the many-body states built upon single particle states
! E_MB : spectrum of the many-body states

SUBROUTINE  MANY_BODY_SPECTRUM(U_AUX,EIGENVALUES_H,U_MB,E_MBX,E_MBY,INFO)

  USE TASKS
  USE physical_constants  
  USE LATTICE
  USE STATE_OBJ

  !IMPLICIT NONE
  COMPLEX*16,        DIMENSION(:,:), INTENT(IN)    :: U_AUX
  DOUBLE PRECISION,  DIMENSION(:),   INTENT(IN)    :: EIGENVALUES_H
  COMPLEX*16,        DIMENSION(:,:), INTENT(OUT)   :: U_MB
  DOUBLE PRECISION,  DIMENSION(:),   INTENT(OUT)   :: E_MBX,E_MBY
  INTEGER,                           INTENT(INOUT) :: INFO

  INTEGER :: k1,k2
  
  ! ----------------- BEGINING -----------------
  ! ----- BUILD THE MANY-BODY LATTICE BASIS ---- 
  ! ----------------- BEGINING -----------------

  INTEGER, DIMENSION(:), ALLOCATABLE :: STATE_,p,TAGS
  INTEGER BASIS_DIM,i,j,k
  LOGICAL MORE  
  DOUBLE PRECISION D_H
  TYPE(STATE),DIMENSION(:), ALLOCATABLE :: STATES
  BASIS_DIM =  INT(D_H(N_SITES,N_PARTICLES))
  ALLOCATE(STATE_(N_SITES))
  ALLOCATE(STATES(BASIS_DIM))
  ALLOCATE(p(N_SITES))
  ALLOCATE(TAGS(BASIS_DIM))
  STATES(:)%TAG = 0
  STATES(:)%site(1) = 0 
  STATES(:)%occupation(1) = 0
  STATES(:)%site(2) = 0 
  STATES(:)%occupation(2) = 0
  MORE = .FALSE.
  i =0  
  DO j=1,N_SITES
     p(j) = INT(SQRT(1.0*HASH_SLOPE*SQRT(1.0*j) + 1.0*HASH_SHIFT)) 
  END DO  
  DO
     CALL COMP_NEXT(N_PARTICLES,N_SITES,STATE_,MORE)         
     !write(*,*) STATE_
     i = i +1
     k = 0
     STATES(i)%TAG = DOT_PRODUCT(STATE_,p)     
     DO j=1,size(STATE_)
        IF (STATE_(j).GT.0 .AND. STATE_(j).LT.N_PARTICLES) THEN
           k = k + 1                      
           STATES(i)%site(k)       = j
           STATES(i)%occupation(k) = STATE_(j)           
           STATES(i)%m(k)          = INT((j-1)/N_SITES_X) + 1
           STATES(i)%n(k)          = j - N_SITES_X*(STATES(i)%m(k) - 1)                         
!           write(*,*) '14324123' 
       ELSE IF(STATE_(j).EQ.N_PARTICLES) THEN
           !k = k + 1   
           !write(*,*)'yo'
           STATES(i)%site(:)       = j
           STATES(i)%occupation(:) = 1           
           STATES(i)%m(:)          = INT((j-1)/N_SITES_X) + 1
           STATES(i)%n(:)          = j - N_SITES_X*(STATES(i)%m(1) - 1)                                   
        END IF
        
        
     END DO
     IF ( .NOT. MORE )  THEN
        EXIT
     END IF
  END DO
  DO j=1,BASIS_DIM
     TAGS(j) = j
  END DO
  IF(BASIS_DIM.GT.1) CALL  QUICK_SORT_I_T(STATES(:)%TAG,TAGS,BASIS_DIM)
  DEALLOCATE(STATE_)
  DEALLOCATE(p)
  
  
  ! ----------------- END -----------------
  ! ----- BUILD THE MANY-BODY LATTICE BASIS ---- 
  ! ----------------- END -----------------

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  ! ----------------- BEGINING -----------------
  ! ----- BUILD THE MANY-BODY TRANSFORMATION MATRIX ---- 
  ! ----- (new) {|j==k,q>} = U_MB^t {|n,q>} (old) -----
  ! ----- U_MB(:,j)
  ! ----------------- BEGINING -----------------


  E_MBX = 0
  E_MBY = 0
  
  DO j=1,BASIS_DIM
     !k1 = STATES(j)%n(1)
     !k2 = STATES(j)%n(2)
     !q1 = STATES(j)%m(1) 
     !q2 = STATES(j)%m(2)
     DO i=1,SIZE(STATES(j)%occupation)
        IF(STATES(j)%occupation(i) .GT. 0) THEN
           E_MBX(j) = E_MBX(j) + STATES(j)%occupation(i)*EIGENVALUES_H(STATES(j)%n(i))       
           E_MBY(j) = E_MBY(j) + STATES(j)%occupation(i)*2.0*cos(2.0*pi*STATES(j)%n(i)*alpha + 2*pi*STATES(j)%m(i)/N_SITES_Y) 
        ELSE
        END IF
     END DO
     !WRITE(*,*) STATES(j)%n(1), STATES(j)%m(1), STATES(j)%n(2), STATES(j)%m(2),STATES(j)%occupation(1),STATES(j)%occupation(2)
     DO i=1,BASIS_DIM
        IF( (STATES(i)%m(1) .EQ. STATES(j)%m(1)) .AND. (STATES(i)%m(2) .EQ. STATES(j)%m(2))) THEN
           !write(*,*) i,STATES(i)%site(1),STATES(i)%site(2),STATES(i)%occupation(1),STATES(i)%occupation(2)           
           U_MB(i,j) = U_AUX(STATES(i)%n(1),STATES(j)%n(1))*U_AUX(STATES(i)%n(2),STATES(j)%n(2))
        ELSE
           U_MB(i,j) = DCMPLX(0.0,0.0)
        END IF
     END DO
  END DO
  DEALLOCATE(STATES)
  DEALLOCATE(TAGS)

  ! ----------------- END -----------------
  ! ----- BUILD THE MANY-BODY TRANSFORMATION MATRIX ---- 
  ! ----- (new) {|k,q>} = U {|n,q>} (old) -----
  ! ----------------- END -----------------




109 FORMAT(9I5)
END SUBROUTINE MANY_BODY_SPECTRUM
